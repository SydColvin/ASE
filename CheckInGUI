//import all the GUI classes
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.util.TreeSet;
import java.util.Arrays;

/**
 * GUI for Check In application
 */
public class CheckInGUI extends JFrame  implements ActionListener {
	
   // The passenger list to be searched.
   private PassengerList passengerList;
    
    //The flight list to be searched.
    private FlightList flightList;
    
    /**
	 * GUI  components
	 */
    JTextField result1, result2, result3;
    JTextField searchField1, searchField2;
    JTextField bookingRefPanel, lastnamePanel, weightPanel, heightPanel, widthPanel, lengthPanel;
    JButton search1, search2;
    JButton enterHeight, enterWidht, enterLength, enterWeight, enterSize;
    JScrollPane scrollList;
    JButton checkIn, close;
    JTextArea resultPassengers, resultFees;
    
    /**
     * Create the frame with its panels.
     * @param list	The passenger list to be searched.
     */
    //public CheckInGUI(PassengerList list) {
      //  this.passengerList = list;
        
        /**
 	    *  set up window title
 	    */    
       // setTitle("Welcome to self-service Check in");
        //disable standard close button
		//setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
		
		//setupNorthPanel();
		
        //pack and set visible
     //   pack();
     //   setVisible(true);
   // }
    
    public CheckInGUI(FlightList list) {
        this.flightList = list;
        
        //set up window title
        setTitle("Welcome to self-service Check in");
        //disable standard close button
		setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
 
		setupSouthPanel();
		

        //pack and set visible
        pack();
        setVisible(true);
    }
    
    private void setupNorthPanel() {
        //search panel contains label, text field and button FOR PASSENGER LIST
    	JPanel northPanel = new JPanel(new GridLayout(2,5));
    	
        JPanel searchPanel1 = new JPanel();
        searchPanel1.setLayout(new GridLayout(1,3));
        searchPanel1.add(new JLabel("Enter ID"));   
        searchField1 = new JTextField(5);
        searchPanel1.add(searchField1);   
        search1 = new JButton("Search");  
        searchPanel1.add(search1);    
        //specify action when button is pressed
        search1.addActionListener(this) ;
        
        //Set up the area where the results will be displayed.
        result1= new JTextField(25);     
        result1.setEditable(false);
        
        //set up north panel containing 2 previous areas
       
        northPanel.add(searchPanel1);
        northPanel.add(result1);
        
      //search panel contains label, text field and button FOR FLIGHT LIST
        JPanel searchPanel2 = new JPanel();
        searchPanel2.setLayout(new GridLayout(1,3));
        searchPanel2.add(new JLabel("Enter Flight code, please"));   
        searchField2 = new JTextField(5);
        searchPanel2.add(searchField2);   
        search2 = new JButton("Search");  
        searchPanel2.add(search2);    
        //specify action when button is pressed
        search2.addActionListener(this) ;
           
        //Set up the area where the results will be displayed.
        result2= new JTextField(25);     
        result2.setEditable(false);
           
        //set up north panel containing 2 previous areas
       
        northPanel.add(searchPanel2);
        northPanel.add(result2);
        
        //add north panel to the content pane
        this.add(northPanel, BorderLayout.NORTH);
    }
    private void setupCenterPanel() {
    	JPanel centerPanel = new JPanel();
	centerPanel.setLayout(new GridLayout(6,2));
	
	//JButton ENTER SIZE
	centerPanel.add(new JLabel("Enter Luggage Dimensions (cm)"));
	centerPanel.add(new JLabel(""));
	
    	centerPanel.add(new JLabel("Height"));
	enterHeight = new JButton("Enter");
        enterHeight.addActionListener(this);
	centerPanel.add(new JLabel(""));
	
	centerPanel.add(new JLabel("Widht"));
	enterWidht = new JButton("Enter");
        enterWidht.addActionListener(this);
	centerPanel.add(new JLabel(""));
	
	centerPanel.add(new JLabel("Length"));
	enterLength = new JButton("Enter");
        enterLength.addActionListener(this);
	centerPanel.add(new JLabel(""));
	 	
	//JButton ENTER WEIGHT
	centerPanel.add(new JLabel("Enter Luggage Weight (kg)"));
	centerPanel.add(new JLabel(""));
	
	centerPanel.add(new JLabel("Weight"));
        enterWeight = new JButton("Enter");
        enterWeight.addActionListener(this);
    }
        
     private void setupSouthPanel() { 
    	JPanel southPanel = new JPanel(new GridLayout(2,5));
    	
    	//Check-In  Button
        checkIn = new JButton("Check in");
        checkIn.addActionListener(this);
        
        //Close Button
        close = new JButton("Close");
        close.addActionListener(this);
        
        //Add buttons to South Pane
        southPanel.add(checkIn);
        southPanel.add(close);
        
        //add south panel to the content pane
        this.add(southPanel, BorderLayout.SOUTH);
    }
     
    private void setupEastPanel() {
        	
    }
        
    private void setupWestPanel() {
        	
    }
        
    private void checkPassenger() {
    	
    }
    
    private void bagWeightIn() {
    	
    }
    
    private void bagVolIn() {
    	
    }
    
    private void feesApplied() {
    	
    }
    
    private void search1() {
    	//get search text and search staff list
    	//setting result text 
        String searchString = searchField1.getText().trim();
        if(searchString.length() > 0) {
            Passenger person = passengerList.findById(searchString);
            if (person != null ) {
            	result1.setText(person.toString());
            	//gobf.disableButton(person.getName().getFirstName());
            }
            else
            	result1.setText("not found");
        }   
        else
        	result1.setText("no text entered");
    }
    private void search2() {
    	//get search text and search staff list
    	//setting result text 
        String searchString = searchField2.getText().trim();
        if(searchString.length() > 0) {
            Flight flight = flightList.findByFlightCode(searchString);
            if (flight != null ) {
            	result2.setText(flight.toString());
            	
            }
            else
            	result2.setText("not found");
        }   
        else
        	result2.setText("no text entered");
    }
    
    /**
     * Set up the action events
     * After clicking any action button by the user the
     * GUI gives an output 
     */    
   
    public void actionPerformed(ActionEvent e) { 
    	if (e.getSource() == search1) {
    		//displayList.setText("Search");
    		search1();
    	}
    		else if (e.getSource() == search2) {
	    		//displayList.setText("Search");
	    		search2();
	    	}
		else if (e.getSource() == enterSize) {
	    		//displayList.setText("Search");
	    		bagVolIn();
    		}
    		else if (e.getSource() == enterWeight) {
	    		//displayList.setText("Search");
	    		bagWeightIn();
    		}
		else if (e.getSource() == close) {
	    		//show 'end of program' before closing file
	    		JOptionPane.showMessageDialog(this, 
	    				 "Do 'end of program' things instead of showing this");
	    		//get the report with short detail from competitor list
	    		String report = flightList.getFlightReport();
	    		//Write the report to a text file 'Allcompetitor_report.txt'
	    		flightList.readFile("Allflight_report.txt", report);
	    		System.exit(0);
	    	}
    		
	    	
    		
	    	
    	}
	   
      
}
